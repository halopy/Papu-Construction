
import java.awt.Desktop;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import static org.apache.poi.ss.format.CellFormatPart.group;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sumerath
 */
public class AdminPanel extends javax.swing.JFrame {

    /**
     * Creates new form AdminPanel
     */
    DefaultTableModel Model; 
    String[] [] arr;
    public AdminPanel() throws FileNotFoundException, IOException {
        initComponents();
        Model = new DefaultTableModel();
        TableAdmin.setModel(Model);
        Model.addColumn("    ID");
        Model.addColumn("Name");
        Model.addColumn("Age");
        Model.addColumn("Gender");
        Model.addColumn("Contact");
        Model.addColumn("Address");
        Model.addColumn("Expertise");
        Model.addColumn("Time");
        Model.addColumn("Price Per Day");
        
        TableAdmin.getColumnModel().getColumn(0).setPreferredWidth(15);
        TableAdmin.getColumnModel().getColumn(2).setPreferredWidth(15);
        TableAdmin.getColumnModel().getColumn(1).setPreferredWidth(150);
        TableAdmin.getColumnModel().getColumn(3).setPreferredWidth(15);
        
        FileInputStream fins = new FileInputStream(new File("src\\Excel\\Workers.xlsx")); 
        XSSFWorkbook wb = new XSSFWorkbook(fins);
        XSSFSheet sheet = wb.getSheetAt(0);
        FormulaEvaluator fmEval = wb.getCreationHelper().createFormulaEvaluator(); 
        int r = 0;
        arr = new String[sheet.getLastRowNum()+1] [8];
        for(Row row : sheet)
        {
            Model.addRow(new Object[]{});
            TableAdmin.setValueAt(r+1, r, 0);
            int col = 1;
            for(Cell cell : row)
            {
                switch(fmEval.evaluateInCell(cell).getCellTypeEnum())
                {
                    case NUMERIC:
                        TableAdmin.setValueAt(cell.getNumericCellValue() + "", r, col);
                        //System.out.print(cell.getNumericCellValue()+"\t\t");
                        arr[r] [col-1] = cell.getNumericCellValue()+ "";
                        break;
                    case STRING:
                        TableAdmin.setValueAt(cell.getStringCellValue(), r, col);
                        //System.out.print(cell.getStringCellValue()+"\t\t");
                        arr[r] [col-1] = cell.getStringCellValue();
                        break;
                }
                col++;
            }
            r++;
            System.out.println();
        }
        for(String str[]: arr)
        {
            for(String str1: str)
            {
                System.out.print(str1 + " ");
            }
            System.out.println(); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ComboExpertiseAdmin = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableAdmin = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TextWorkerIDAdmin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TextPriceAdmin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        RadioMaleAdmin = new javax.swing.JRadioButton();
        RadioFemaleAdmin = new javax.swing.JRadioButton();
        RadioOtherAdmin = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        TextContactAdmin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TextAddressAdmin = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ComboBoxExpertiseAdmin = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TextNameAdmin = new javax.swing.JTextField();
        ButtonAddAdmin = new javax.swing.JButton();
        ButtonRemoveAdmin = new javax.swing.JButton();
        ButtonClearAdmin = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        ComboTimeAdmin = new javax.swing.JComboBox<>();
        TextAgeAdmin = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ButtonBack = new javax.swing.JButton();
        ButtonExit = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        MenuOpenAdmin = new javax.swing.JMenuItem();
        MenuExit = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(135, 206, 235));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setText("Employees");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel2.setText("Expertise:");

        ComboExpertiseAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Labourer", "Electrician", "Plumber", "Plaster", "Painter" }));
        ComboExpertiseAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboExpertiseAdminActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jScrollPane1ComponentAdded(evt);
            }
        });

        TableAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Age", "Gender", "Phone Number", "Address", "Expertise", "Time", "Price Per Day"
            }
        ));
        jScrollPane1.setViewportView(TableAdmin);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(135, 206, 235));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel3.setText("Remove Worker");
        jLabel3.setToolTipText("");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel4.setText("Worker ID");

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel5.setText("Age");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel6.setText("Gender");

        buttonGroup1.add(RadioMaleAdmin);
        RadioMaleAdmin.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        RadioMaleAdmin.setText("Male");

        buttonGroup1.add(RadioFemaleAdmin);
        RadioFemaleAdmin.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        RadioFemaleAdmin.setText("Female");

        buttonGroup1.add(RadioOtherAdmin);
        RadioOtherAdmin.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        RadioOtherAdmin.setText("Other");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel7.setText("Address");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel8.setText("Contact");

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel9.setText("Expertise");

        ComboBoxExpertiseAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Expertise", "Labourer", "Plaster", "Painter", "Plumber", "Electrician" }));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel10.setText("Add New Worker");
        jLabel10.setToolTipText("");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel11.setText("Name");

        ButtonAddAdmin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonAddAdmin.setText("Add");
        ButtonAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddAdminActionPerformed(evt);
            }
        });

        ButtonRemoveAdmin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonRemoveAdmin.setText("Remove");
        ButtonRemoveAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRemoveAdminActionPerformed(evt);
            }
        });

        ButtonClearAdmin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonClearAdmin.setText("Clear");
        ButtonClearAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearAdminActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel12.setText("Time");

        ComboTimeAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Time", "10 AM - 4 PM", "9 AM - 5 PM", "1 PM - 3 PM", "11 AM - 3 PM", "9 AM - 2 PM" }));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel13.setText("Price Per Day");

        ButtonBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonBack.setText("Logout");
        ButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackActionPerformed(evt);
            }
        });

        ButtonExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonExit.setText("Exit");
        ButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(TextAgeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel12))
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                            .addGap(58, 58, 58)
                                                            .addComponent(ComboTimeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                            .addGap(37, 37, 37)
                                                            .addComponent(RadioMaleAdmin)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(RadioFemaleAdmin)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(RadioOtherAdmin)
                                                            .addGap(14, 14, 14)))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(TextNameAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(TextWorkerIDAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ButtonRemoveAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(TextContactAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(TextAddressAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(ComboBoxExpertiseAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(TextPriceAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(ButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(ButtonClearAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ButtonAddAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(57, 57, 57))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextNameAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel7)
                    .addComponent(TextAddressAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TextAgeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(TextContactAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(RadioMaleAdmin)
                    .addComponent(RadioFemaleAdmin)
                    .addComponent(RadioOtherAdmin)
                    .addComponent(jLabel9)
                    .addComponent(ComboBoxExpertiseAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(ComboTimeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(TextPriceAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonClearAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonAddAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextWorkerIDAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonRemoveAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboExpertiseAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 676, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboExpertiseAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jMenu3.setText("File");

        MenuOpenAdmin.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuOpenAdmin.setText("Open FIle ");
        MenuOpenAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuOpenAdminActionPerformed(evt);
            }
        });
        jMenu3.add(MenuOpenAdmin);

        MenuExit.setText("Exit");
        MenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuExitActionPerformed(evt);
            }
        });
        jMenu3.add(MenuExit);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Help? Read Manual");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ComboExpertiseAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboExpertiseAdminActionPerformed
        // TODO add your handling code here:
        if(ComboExpertiseAdmin.getSelectedItem().equals("Default"))
        {
            String[] Expertise = new String[arr.length];
            Model.setRowCount(0);
            int i = 0;
            int r = 0;
         
            for(String[] c1 : arr)
            {
                int col = 1;
                    Model.addRow(new Object[]{});
                    Model.setValueAt(r+1, r, 0);
                    for(String data : c1)
                    {
                        Model.setValueAt(data, r, col);
                        col++;
                    }
                    r++;
            }
        }
        else if(ComboExpertiseAdmin.getSelectedItem().equals("Electrician"))
        {
            String[] Expertise = new String[arr.length];
            Model.setRowCount(0);
            int i = 0;
            int r = 0;
         
            //storing the category Electrician  in an array 
            for(String[] c1 : arr)
            {
                int col = 1;
                if("Electrician".equals(c1[5]))
                {
                    Model.addRow(new Object[]{});
                    Model.setValueAt(r+1, r, 0);
                    for(String data : c1)
                    {
                        Model.setValueAt(data, r, col);
                        col++;
                    }
                    r++;
                }   
            }
        }
        else if(ComboExpertiseAdmin.getSelectedItem().equals("Labourer"))
        {
            String[] Expertise = new String[arr.length];
            Model.setRowCount(0);
            int i = 0;
            int r = 0;
         
            //storing the category Labourer  in an array 
            for(String[] c1 : arr)
            {
                int col = 1;
                if("Labourer".equals(c1[5]))
                {
                    Model.addRow(new Object[]{});
                    Model.setValueAt(r+1, r, 0);
                    for(String data : c1)
                    {
                        Model.setValueAt(data, r, col);
                        col++;
                    }
                    r++;
                }   
            }
        }
        else if(ComboExpertiseAdmin.getSelectedItem().equals("Plumber"))
        {
            String[] Expertise = new String[arr.length];
            Model.setRowCount(0);
            int i = 0;
            int r = 0;
         
            //storing the category Plumber  in an array 
            for(String[] c1 : arr)
            {
                int col = 1;
                if("Plumber".equals(c1[5]))
                {
                    Model.addRow(new Object[]{});
                    Model.setValueAt(r+1, r, 0);
                    for(String data : c1)
                    {
                        Model.setValueAt(data, r, col);
                        col++;
                    }
                    r++;
                }   
            }
        }
        else if(ComboExpertiseAdmin.getSelectedItem().equals("Plaster"))
        {
            String[] Expertise = new String[arr.length];
            Model.setRowCount(0);
            int i = 0;
            int r = 0;
         
            //storing the category Plaster  in an array 
            for(String[] c1 : arr)
            {
                int col = 1;
                if("Plaster".equals(c1[5]))
                {
                    Model.addRow(new Object[]{});
                    Model.setValueAt(r+1, r, 0);
                    for(String data : c1)
                    {
                        Model.setValueAt(data, r, col);
                        col++;
                    }
                    r++;
                }   
            }
        }
        else if(ComboExpertiseAdmin.getSelectedItem().equals("Painter"))
        {
            String[] Expertise = new String[arr.length];
            Model.setRowCount(0);
            int i = 0;
            int r = 0;
         
            //storing the category Painter  in an array 
            for(String[] c1 : arr)
            {
                int col = 1;
                if("Painter".equals(c1[5]))
                {
                    Model.addRow(new Object[]{});
                    Model.setValueAt(r+1, r, 0);
                    for(String data : c1)
                    {
                        Model.setValueAt(data, r, col);
                        col++;
                    }
                    r++;
                }   
            }
        }
    }//GEN-LAST:event_ComboExpertiseAdminActionPerformed

    private void jScrollPane1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jScrollPane1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1ComponentAdded

    
    String getGender()
    {
        if(RadioMaleAdmin.isSelected())
        {
            return "M";
        }
        else if(RadioFemaleAdmin.isSelected())
        {
            return "F";
        }
        else if(RadioOtherAdmin.isSelected())
        {
            return "O";
        }
        else
        {
            return null;
        }
    }
    
    private void ButtonAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddAdminActionPerformed
        //FileInputStream inputStream = null;
        try
        {
            // TODO add your handling code here:
            int exception = 0;
            try
            {
                String Name = TextNameAdmin.getText();
                String Address = TextAddressAdmin.getText();
                String Age = TextAgeAdmin.getText();
                String Contact = TextContactAdmin.getText();
                String Price = TextPriceAdmin.getText();
                String Expertise = (ComboBoxExpertiseAdmin.getSelectedItem()).toString();
                String Time = (ComboTimeAdmin.getSelectedItem()).toString();
                int h = TableAdmin.getRowCount();
                int iD = TableAdmin.getRowCount() + 1;
                //Model.setRowCount(iD);
                try
                {

                    if(Name.equals("") || Address.equals("") || Age.equals("") || Contact.equals("") || Price.equals(""))
                    {
                        JOptionPane.showMessageDialog(this, "Please enter the empty fields");
                        exception = 1;
                    }
                    if(exception == 0)
                    {
                        try
                        {
                            if(Expertise.equals("Select Expertise"))
                            {
                                JOptionPane.showMessageDialog(this, "Please select the field of expertises");
                                exception = 1;
                            }
                            if(exception == 0)
                            {
                                try
                                {
                                    if(Time.equals("Select Time"))
                                    {
                                        JOptionPane.showMessageDialog(this, "Please select Time");
                                        exception = 1;
                                    }
                                    if(exception == 0)
                                    {
                                    try
                                    {
                                        if(getGender().equals(null))
                                        {
                                            JOptionPane.showMessageDialog(this, "Please select Gender");
                                            exception = 1;
                                        }
                                        if(exception == 0)
                                            {
                                                try
                                                {
                                                    Integer.parseInt(TextAgeAdmin.getText());
                                                    if(Integer.parseInt(TextAgeAdmin.getText())<0)
                                                    {
                                                        JOptionPane.showMessageDialog(this, "Please enter a valid age", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                        exception = 1;
                                                    }
                                                    if(exception == 0)
                                                    {
                                                        try
                                                        {
                                                            Integer.parseInt(TextContactAdmin.getText());
                                                            if(Integer.parseInt(TextContactAdmin.getText())<0)
                                                            {
                                                                JOptionPane.showMessageDialog(this, "Please enter a valid contact number", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                                exception = 1;
                                                            }
                                                            if(exception == 0)
                                                            {
                                                                try
                                                                {
                                                                    Integer.parseInt(TextPriceAdmin.getText());
                                                                    if(Integer.parseInt(TextPriceAdmin.getText())<0)
                                                                    {
                                                                        JOptionPane.showMessageDialog(this, "Please enter a valid price", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                                        exception = 1;
                                                                    }
                                                                }
                                                                catch(NumberFormatException e)
                                                                {
                                                                    JOptionPane.showMessageDialog(this, "Please enter a number in Price Per Day", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                                    exception = 1;
                                                                }
                                                                
                                                            }
                                                        }
                                                        catch(NumberFormatException e)
                                                        {
                                                            JOptionPane.showMessageDialog(this, "Please enter a number in Contact", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                            exception = 1;
                                                        }
                                                    }
                                                }
                                                catch(NumberFormatException e)
                                                {
                                                    JOptionPane.showMessageDialog(this, "Please enter a number in Age", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                    exception = 1;
                                                }
                                            }
                                    }
                                    catch(Exception e)
                                    {
                                        JOptionPane.showMessageDialog(this, "Please select Gender");
                                        exception = 1;
                                    }
                                    }
                                }
                                catch(Exception e)
                                {
                                    JOptionPane.showMessageDialog(this, "Please select Time");
                                    exception = 1;
                                }
                            }
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(this, "Please select the field of expertises");
                            exception = 1;
                        }
                    }
                    if(exception == 0)
                    {
                        int i = iD;
                        if(i >= h)
                        {
                            //System.out.println(i);
                            String ID = Integer.toString(i);
                            String data[] = {ID, Name, Age, getGender(), Contact, Address, Expertise, Time, Price};
                            Model.addRow(data);
                            JOptionPane.showMessageDialog(rootPane, TextNameAdmin.getText() + " has been added successfully.", "Pappu Construction", JOptionPane.INFORMATION_MESSAGE);
                            Integer.parseInt(ID);
                            i++;
                        }
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this, "Please enter the fields to add to the table");
                    exception = 1;
                }
            }
            catch(NullPointerException e)
            {
                JOptionPane.showMessageDialog(this, "Please enter the fields to add to the table");
                exception = 1;
            } 
            if(exception == 0)
            {
            int sn = Integer.parseInt((String) Model.getValueAt(Model.getRowCount()-1,0));//Getting the serial number of the last worker in the list
            String path = "src\\Excel\\Workers.xlsx";
            FileInputStream inputStream = new FileInputStream(new File(path));
            Workbook workbook = WorkbookFactory.create(inputStream);
            Sheet sheet1 = workbook.getSheetAt(0);
            Object[] vdetails = {TextNameAdmin.getText(),TextAgeAdmin.getText(), getGender(),TextContactAdmin.getText(),
                TextAddressAdmin.getText(),ComboBoxExpertiseAdmin.getSelectedItem(),ComboTimeAdmin.getSelectedItem(),TextPriceAdmin.getText()};
            int rowCount = sheet1.getLastRowNum()+1;
            //Adding the vehicle details in the excel file
            Row row = sheet1.createRow(rowCount++);
            int col = 0;
            //looping the vehicle details
            for (Object data : vdetails) {
                Cell cell = row.createCell(col++);
                if (data instanceof String) {
                    cell.setCellValue((String) data);
                } else if (data instanceof Integer) {
                    cell.setCellValue((Integer) data);
                }
            }
            inputStream.close();
            try
            {
                FileOutputStream outputStream = new FileOutputStream(path);
                workbook.write(outputStream);
                outputStream.close();
                
                
            }
            catch(FileNotFoundException ex)
            {
                JOptionPane.showMessageDialog(rootPane, "Data couldn't be added to the excel file as it is already in use.", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            workbook.close();
        }
        }
        catch(FileNotFoundException ex)
        {
            Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null,ex);
        } catch (IOException ex) {
            Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidFormatException ex) {
            Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EncryptedDocumentException ex) {
            Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonAddAdminActionPerformed

    private void ButtonRemoveAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRemoveAdminActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Model = (DefaultTableModel) TableAdmin.getModel();
        int exception = 0; 
        if(exception == 0)
        {
        try
        {
            String RemoveID = TextWorkerIDAdmin.getText();
            for(int i = 0; i < Model.getRowCount(); i++)
            {
                if ((Model.getValueAt(i, 0)).toString().equals(RemoveID))
                {
                    Model.removeRow(i);
                    TextWorkerIDAdmin.setText(""); 
                    JOptionPane.showMessageDialog(this, "The data has been successfully removed.");
                    exception = 1; 
                    break;
                }
            }
            
            if(exception == 0)
            {
                try
                {
                    int i = 0; 
                    while(i < Model.getRowCount())
                    { 
                        if((Model.getValueAt(i, 0)).toString() != (RemoveID))
                        {
                            JOptionPane.showMessageDialog(this, "Please enter a valid ID to be removed..");
                            exception = 1; 
                            break;
                        }
                    }
                    }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this, "The ID does not exist.");
                    exception = 1; 
                }
           
                if(exception == 0)
                {
                    int RemoveiD = Integer.parseInt(RemoveID);
                    if(RemoveiD < 0)
                    {
                        JOptionPane.showMessageDialog(this, "Please enter a valid ID to remove from the table");
                        exception = 1; 
                    }
                }
            } 
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Please enter a valid ID to remove from the table");
        }
        }   
    }//GEN-LAST:event_ButtonRemoveAdminActionPerformed

    private void ButtonClearAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearAdminActionPerformed
        // TODO add your handling code here:
        TextNameAdmin.setText("");
        TextAddressAdmin.setText("");
        TextAgeAdmin.setText("");
        TextContactAdmin.setText("");
        TextPriceAdmin.setText("");
        ComboBoxExpertiseAdmin.setSelectedIndex(0);
        ComboTimeAdmin.setSelectedIndex(0);
        buttonGroup1.clearSelection(); 
    }//GEN-LAST:event_ButtonClearAdminActionPerformed

    private void ButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new GUI().setVisible(true);
    }//GEN-LAST:event_ButtonBackActionPerformed

    private void ButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExitActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame("EXIT");
        if(JOptionPane.showConfirmDialog(frame, "Confirm Exit", "EXIT", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_ButtonExitActionPerformed

    private void MenuOpenAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuOpenAdminActionPerformed
        // TODO add your handling code here:
        DefaultTableModel AdminPanelModel = (DefaultTableModel) TableAdmin.getModel(); 
        //Clear Table before importing
        AdminPanelModel.setNumRows(0); 
        
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null; 
        XSSFWorkbook excelImportWorkbook = null;
        //Directory Path
        String DirectoryPath = "src\\Excel";
        JFileChooser excelFileChooserImport = new JFileChooser(DirectoryPath);  
        int excelChooser = excelFileChooserImport.showOpenDialog(null);
        //If Open is Clicked
        if(excelChooser == JFileChooser.APPROVE_OPTION)
        {
            try 
            {
                File excelFile = excelFileChooserImport.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportWorkbook = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportWorkbook.getSheetAt(0);
                int r = 0;
                for(Row row : excelSheet)
                {
                    Model.addRow(new Object[]{});
                    TableAdmin.setValueAt(r+1, r, 0);
                    int col = 1;
                    for(Cell cell : row)
                    {
                        FormulaEvaluator fmEval = excelImportWorkbook.getCreationHelper().createFormulaEvaluator(); 
                        switch(fmEval.evaluateInCell(cell).getCellTypeEnum())
                        {
                            case NUMERIC:
                                TableAdmin.setValueAt(cell.getNumericCellValue() + "", r, col);
                                System.out.print(cell.getNumericCellValue()+"\t\t");
                                break;
                            case STRING:
                                TableAdmin.setValueAt(cell.getStringCellValue(), r, col);
                                System.out.print(cell.getStringCellValue()+"\t\t");
                                break;
                        }
                        col++;
                    }
                    r++;
                    System.out.println();
                }
                JOptionPane.showMessageDialog(null, "Data has been successfully imported");
            } 
            catch (FileNotFoundException ex) 
            {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } 
    }//GEN-LAST:event_MenuOpenAdminActionPerformed

    private void MenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_MenuExitActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        if(Desktop.isDesktopSupported()){
            try{
                File file=new File("src\\User Manual\\User Manual.PDF");
                Desktop.getDesktop().open(file);
                
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this, "File not found!!");
            }
            
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try 
                {
                    new AdminPanel().setVisible(true);
                } catch (IOException ex) 
                {
                    Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAddAdmin;
    private javax.swing.JButton ButtonBack;
    private javax.swing.JButton ButtonClearAdmin;
    private javax.swing.JButton ButtonExit;
    private javax.swing.JButton ButtonRemoveAdmin;
    private javax.swing.JComboBox<String> ComboBoxExpertiseAdmin;
    private javax.swing.JComboBox<String> ComboExpertiseAdmin;
    private javax.swing.JComboBox<String> ComboTimeAdmin;
    private javax.swing.JMenuItem MenuExit;
    private javax.swing.JMenuItem MenuOpenAdmin;
    private javax.swing.JRadioButton RadioFemaleAdmin;
    private javax.swing.JRadioButton RadioMaleAdmin;
    private javax.swing.JRadioButton RadioOtherAdmin;
    private javax.swing.JTable TableAdmin;
    private javax.swing.JTextField TextAddressAdmin;
    private javax.swing.JTextField TextAgeAdmin;
    private javax.swing.JTextField TextContactAdmin;
    private javax.swing.JTextField TextNameAdmin;
    private javax.swing.JTextField TextPriceAdmin;
    private javax.swing.JTextField TextWorkerIDAdmin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
