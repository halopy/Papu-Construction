
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sumerath
 */
public class RegisterPanel extends javax.swing.JFrame {
DefaultTableModel Model;
    /**
     * Creates new form RegisterPanel
     */
    public RegisterPanel() throws FileNotFoundException, IOException {
        initComponents();
        Model = new DefaultTableModel();
        TableRegister.setModel(Model);
        Model.addColumn("    ID");
        Model.addColumn("Name");
        Model.addColumn("Age");
        Model.addColumn("Gender");
        Model.addColumn("Contact");
        Model.addColumn("Address");
        Model.addColumn("Expertise");
        Model.addColumn("Time");
        Model.addColumn("Price Per Day");
        
        TableRegister.getColumnModel().getColumn(0).setPreferredWidth(15);
        TableRegister.getColumnModel().getColumn(2).setPreferredWidth(15);
        TableRegister.getColumnModel().getColumn(1).setPreferredWidth(150);
        TableRegister.getColumnModel().getColumn(3).setPreferredWidth(15);
        
        FileInputStream fins = new FileInputStream(new File("src\\Excel\\Workers.xlsx")); 
        XSSFWorkbook wb = new XSSFWorkbook(fins);
        XSSFSheet sheet = wb.getSheetAt(0);
        FormulaEvaluator fmEval = wb.getCreationHelper().createFormulaEvaluator(); 
        int r = 0;
        for(Row row : sheet)
        {
            Model.addRow(new Object[]{});
            TableRegister.setValueAt(r+1, r, 0);
            int col = 1;
            for(Cell cell : row)
            {
                switch(fmEval.evaluateInCell(cell).getCellTypeEnum())
                {
                    case NUMERIC:
                        TableRegister.setValueAt(cell.getNumericCellValue() + "", r, col);
                        System.out.print(cell.getNumericCellValue()+"\t\t");
                        break;
                    case STRING:
                        TableRegister.setValueAt(cell.getStringCellValue(), r, col);
                        System.out.print(cell.getStringCellValue()+"\t\t");
                        break;
                }
                col++;
            }
            r++;
            System.out.println();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TextNameRegister = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TextAgeRegister = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        RadioMaleRegister = new javax.swing.JRadioButton();
        RadioFemaleRegister = new javax.swing.JRadioButton();
        RadioOtherRegister = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        TextAddressRegister = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TextContactRegister = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ComboExpertiseRegister = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        ComboTimeRegister = new javax.swing.JComboBox<>();
        ClearRegister = new javax.swing.JButton();
        RegisterButtonRegister = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        TextPriceRegister = new javax.swing.JTextField();
        ButtonBack = new javax.swing.JButton();
        ButtonExit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableRegister = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuExit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(135, 206, 235));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setText("Register");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel11.setText("Name");

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel5.setText("Age");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel6.setText("Gender");

        buttonGroup1.add(RadioMaleRegister);
        RadioMaleRegister.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        RadioMaleRegister.setText("Male");

        buttonGroup1.add(RadioFemaleRegister);
        RadioFemaleRegister.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        RadioFemaleRegister.setText("Female");

        buttonGroup1.add(RadioOtherRegister);
        RadioOtherRegister.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        RadioOtherRegister.setText("Other");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel7.setText("Address");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel8.setText("Contact");

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel9.setText("Expertise");

        ComboExpertiseRegister.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Expertise", "Labourer", "Plaster", "Painter", "Plumber", "Electrician" }));

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel12.setText("Time");

        ComboTimeRegister.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Time", "10 AM - 4 PM", "9 AM - 5 PM", "1 PM - 3 PM", "11 AM - 3 PM", "9 AM - 2 PM" }));

        ClearRegister.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClearRegister.setText("Clear");
        ClearRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearRegisterActionPerformed(evt);
            }
        });

        RegisterButtonRegister.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RegisterButtonRegister.setText("Register");
        RegisterButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonRegisterActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel13.setText("Price Per Day");

        ButtonBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonBack.setText("Back");
        ButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackActionPerformed(evt);
            }
        });

        ButtonExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonExit.setText("Exit");
        ButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExitActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TableRegister.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableRegister);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 902, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(RadioMaleRegister)
                                    .addGap(18, 18, 18)
                                    .addComponent(RadioFemaleRegister)
                                    .addGap(18, 18, 18)
                                    .addComponent(RadioOtherRegister)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(TextNameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(150, 150, 150)
                                    .addComponent(jLabel7))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(TextAgeRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ComboTimeRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(103, 103, 103))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ClearRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RegisterButtonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextAddressRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextContactRegister)
                                    .addComponent(ComboExpertiseRegister, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TextPriceRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(TextNameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(TextAddressRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TextAgeRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(TextContactRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(RadioMaleRegister)
                    .addComponent(RadioFemaleRegister)
                    .addComponent(RadioOtherRegister)
                    .addComponent(jLabel9)
                    .addComponent(ComboExpertiseRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(ComboTimeRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(TextPriceRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterButtonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuExit.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuExit.add(jMenuItem1);

        jMenuBar1.add(MenuExit);

        jMenu2.setText("Help");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Help? Read Manual");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ClearRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearRegisterActionPerformed
        // TODO add your handling code here:
        TextNameRegister.setText("");
        TextAddressRegister.setText("");
        TextAgeRegister.setText("");
        TextContactRegister.setText("");
        TextPriceRegister.setText("");
        ComboExpertiseRegister.setSelectedIndex(0);
        ComboTimeRegister.setSelectedIndex(0);
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_ClearRegisterActionPerformed

    String getGender()
    {
        if(RadioMaleRegister.isSelected())
        {
            return "M";
        }
        else if(RadioFemaleRegister.isSelected())
        {
            return "F";
        }
        else if(RadioOtherRegister.isSelected())
        {
            return "O";
        }
        else
        {
            return null;
        }
    }
    
    private void RegisterButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonRegisterActionPerformed
        FileInputStream inputStream = null;
        try
        {
            int exception = 0;
            try
            {
                /**String Name = TextNameRegister.getText();
                String Address = TextAddressRegister.getText();
                String Age = TextAgeRegister.getText();
                String Contact = TextContactRegister.getText();
                String Price = TextPriceRegister.getText();
                String Expertise = (ComboExpertiseRegister.getSelectedItem()).toString();
                String Time = (ComboTimeRegister.getSelectedItem()).toString();**/
                int h = TableRegister.getRowCount();
                int iD = TableRegister.getRowCount() + 1;
                //Model.setRowCount(iD);
                try
                {
                    if(TextNameRegister.getText().equals("") || TextAddressRegister.getText().equals("") || TextAgeRegister.getText().equals("") || TextContactRegister.getText().equals("") || TextPriceRegister.getText().equals(""))
                    {
                        JOptionPane.showMessageDialog(this, "Please enter the empty fields");
                        exception = 1;
                    }
                    if(exception == 0)
                    {
                        try
                        {
                            if((ComboExpertiseRegister.getSelectedItem()).toString().equals("Select Expertise"))
                            {
                                JOptionPane.showMessageDialog(this, "Please select the field of expertises");
                                exception = 1;
                            }
                            if(exception == 0)
                            {
                                try
                                {
                                    if((ComboTimeRegister.getSelectedItem()).toString().equals("Select Time"))
                                    {
                                        JOptionPane.showMessageDialog(this, "Please select Time");
                                        exception = 1;
                                    }
                                    if(exception == 0)
                                    {
                                        if(getGender().equals(null))
                                        {
                                            JOptionPane.showMessageDialog(this, "Please select Gender");
                                            exception = 1;
                                        }
                                            if(exception == 0)
                                            {
                                                try
                                                {
                                                    Integer.parseInt(TextAgeRegister.getText());
                                                    if(Integer.parseInt(TextAgeRegister.getText())<0)
                                                    {
                                                        JOptionPane.showMessageDialog(this, "Please enter a valid age", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                        exception = 1;
                                                    }
                                                    if(exception == 0)
                                                    {
                                                        try
                                                        {
                                                            Integer.parseInt(TextContactRegister.getText());
                                                            if(Integer.parseInt(TextContactRegister.getText())<0)
                                                            {
                                                                JOptionPane.showMessageDialog(this, "Please enter a valid contact number", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                                exception = 1;
                                                            }
                                                            if(exception == 0)
                                                            {
                                                                try
                                                                {
                                                                    Integer.parseInt(TextPriceRegister.getText());
                                                                    if(Integer.parseInt(TextPriceRegister.getText())<0)
                                                                    {
                                                                        JOptionPane.showMessageDialog(this, "Please enter a valid price", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                                        exception = 1;
                                                                    }
                                                                }
                                                                catch(NumberFormatException e)
                                                                {
                                                                    JOptionPane.showMessageDialog(this, "Please enter a number in Price Per Day", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                                    exception = 1;
                                                                }
                                                                
                                                            }
                                                        }
                                                        catch(NumberFormatException e)
                                                        {
                                                            JOptionPane.showMessageDialog(this, "Please enter a number in Contact", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                            exception = 1;
                                                        }
                                                    }
                                                }
                                                catch(NumberFormatException e)
                                                {
                                                    JOptionPane.showMessageDialog(this, "Please enter a number in Age", "ALERT", JOptionPane.ERROR_MESSAGE);
                                                    exception = 1;
                                                }
                                            }
                                        
                                    }
                                }
                                catch(Exception e)
                                {
                                    JOptionPane.showMessageDialog(this, "Please select Gender");
                                    exception = 1;
                                }
                            }
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(this, "Please select the field of expertises");
                            exception = 1;
                        }
                    }
                    if(exception == 0)
                    {
                        int i = iD;
                        if(i >= h)
                        {
                            System.out.println(i);
                            String ID = Integer.toString(i);
                            String data[] = {ID, TextNameRegister.getText(), TextAgeRegister.getText(), getGender(), TextContactRegister.getText(), TextAddressRegister.getText(), (ComboExpertiseRegister.getSelectedItem()).toString(), (ComboTimeRegister.getSelectedItem()).toString(), TextPriceRegister.getText()};
                            Model.addRow(data);
                            JOptionPane.showMessageDialog(this, "You have been successfully Registered. You can check your details in below table.");
                            Integer.parseInt(ID);
                            i++;
                        }
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this, "Please enter the fields to add to the table");
                    exception = 1;
                }
            }
            catch(NullPointerException e)
            {
                JOptionPane.showMessageDialog(this, "Please enter the fields to add to the table");
                exception = 1;
            }
            if(exception == 0)
            {
            int sn = Integer.parseInt((String) Model.getValueAt(Model.getRowCount()-1,0));//Getting the serial number of the last worker in the list
            String path = "src\\Excel\\Workers.xlsx";
        inputStream = new FileInputStream(new File(path));
        Workbook workbook = WorkbookFactory.create(inputStream);
        Sheet sheet1 = workbook.getSheetAt(0);
        Object[] vdetails = {TextNameRegister.getText(),TextAgeRegister.getText(), getGender(),TextContactRegister.getText(),
            TextAddressRegister.getText(),ComboExpertiseRegister.getSelectedItem(),ComboTimeRegister.getSelectedItem(),TextPriceRegister.getText()};
        int rowCount = sheet1.getLastRowNum()+1;
        //Adding the vehicle details in the excel file
        Row row = sheet1.createRow(rowCount++);
        int col = 0;
        //looping the vehicle details
        for (Object data : vdetails) {
            Cell cell = row.createCell(col++);
            if (data instanceof String) {
                cell.setCellValue((String) data);
            } else if (data instanceof Integer) {
                cell.setCellValue((Integer) data);
            }
        }
        inputStream.close();
        try
        {
            FileOutputStream outputStream = new FileOutputStream(path);
            workbook.write(outputStream);
            outputStream.close();
            
            
        }
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(rootPane, "Data couldn't be added to the excel file as it is already in use.", "Alert", JOptionPane.ERROR_MESSAGE);
        }
        workbook.close();
        }
        }
        catch(FileNotFoundException ex)
        {
            Logger.getLogger(RegisterPanel.class.getName()).log(Level.SEVERE, null,ex);
        } catch (IOException ex) {
        Logger.getLogger(RegisterPanel.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InvalidFormatException ex) {
        Logger.getLogger(RegisterPanel.class.getName()).log(Level.SEVERE, null, ex);
    } catch (EncryptedDocumentException ex) {
        Logger.getLogger(RegisterPanel.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    //}
    }//GEN-LAST:event_RegisterButtonRegisterActionPerformed

    private void ButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new GUI().setVisible(true);
    }//GEN-LAST:event_ButtonBackActionPerformed

    private void ButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExitActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame("EXIT");
        if(JOptionPane.showConfirmDialog(frame, "Confirm Exit", "EXIT", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_ButtonExitActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        if(Desktop.isDesktopSupported()){
            try{
                File file=new File("src\\User Manual\\User Manual.PDF");
                Desktop.getDesktop().open(file);
                
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this, "File not found!!");
            }
            
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RegisterPanel().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(RegisterPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBack;
    private javax.swing.JButton ButtonExit;
    private javax.swing.JButton ClearRegister;
    private javax.swing.JComboBox<String> ComboExpertiseRegister;
    private javax.swing.JComboBox<String> ComboTimeRegister;
    private javax.swing.JMenu MenuExit;
    private javax.swing.JRadioButton RadioFemaleRegister;
    private javax.swing.JRadioButton RadioMaleRegister;
    private javax.swing.JRadioButton RadioOtherRegister;
    private javax.swing.JButton RegisterButtonRegister;
    private javax.swing.JTable TableRegister;
    private javax.swing.JTextField TextAddressRegister;
    private javax.swing.JTextField TextAgeRegister;
    private javax.swing.JTextField TextContactRegister;
    private javax.swing.JTextField TextNameRegister;
    private javax.swing.JTextField TextPriceRegister;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
